"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromptAgent = void 0;
const core = __importStar(require("../../core"));
const Llm_1 = require("./Llm");
const PromptAgentOutputToolsItem_1 = require("./PromptAgentOutputToolsItem");
const KnowledgeBaseLocator_1 = require("./KnowledgeBaseLocator");
const CustomLlm_1 = require("./CustomLlm");
const RagConfig_1 = require("./RagConfig");
exports.PromptAgent = core.serialization.object({
    prompt: core.serialization.string().optional(),
    llm: Llm_1.Llm.optional(),
    temperature: core.serialization.number().optional(),
    maxTokens: core.serialization.property("max_tokens", core.serialization.number().optional()),
    tools: core.serialization.list(PromptAgentOutputToolsItem_1.PromptAgentOutputToolsItem).optional(),
    toolIds: core.serialization.property("tool_ids", core.serialization.list(core.serialization.string()).optional()),
    mcpServerIds: core.serialization.property("mcp_server_ids", core.serialization.list(core.serialization.string()).optional()),
    nativeMcpServerIds: core.serialization.property("native_mcp_server_ids", core.serialization.list(core.serialization.string()).optional()),
    knowledgeBase: core.serialization.property("knowledge_base", core.serialization.list(KnowledgeBaseLocator_1.KnowledgeBaseLocator).optional()),
    customLlm: core.serialization.property("custom_llm", CustomLlm_1.CustomLlm.optional()),
    ignoreDefaultPersonality: core.serialization.property("ignore_default_personality", core.serialization.boolean().optional()),
    rag: RagConfig_1.RagConfig.optional(),
});
