"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WidgetConfigResponse = void 0;
const core = __importStar(require("../../core"));
const EmbedVariant_1 = require("./EmbedVariant");
const WidgetPlacement_1 = require("./WidgetPlacement");
const WidgetExpandable_1 = require("./WidgetExpandable");
const WidgetConfigResponseModelAvatar_1 = require("./WidgetConfigResponseModelAvatar");
const WidgetFeedbackMode_1 = require("./WidgetFeedbackMode");
const WidgetTextContents_1 = require("./WidgetTextContents");
const WidgetLanguagePresetResponse_1 = require("./WidgetLanguagePresetResponse");
exports.WidgetConfigResponse = core.serialization.object({
    variant: EmbedVariant_1.EmbedVariant.optional(),
    placement: WidgetPlacement_1.WidgetPlacement.optional(),
    expandable: WidgetExpandable_1.WidgetExpandable.optional(),
    avatar: WidgetConfigResponseModelAvatar_1.WidgetConfigResponseModelAvatar.optional(),
    feedbackMode: core.serialization.property("feedback_mode", WidgetFeedbackMode_1.WidgetFeedbackMode.optional()),
    bgColor: core.serialization.property("bg_color", core.serialization.string().optional()),
    textColor: core.serialization.property("text_color", core.serialization.string().optional()),
    btnColor: core.serialization.property("btn_color", core.serialization.string().optional()),
    btnTextColor: core.serialization.property("btn_text_color", core.serialization.string().optional()),
    borderColor: core.serialization.property("border_color", core.serialization.string().optional()),
    focusColor: core.serialization.property("focus_color", core.serialization.string().optional()),
    borderRadius: core.serialization.property("border_radius", core.serialization.number().optional()),
    btnRadius: core.serialization.property("btn_radius", core.serialization.number().optional()),
    actionText: core.serialization.property("action_text", core.serialization.string().optional()),
    startCallText: core.serialization.property("start_call_text", core.serialization.string().optional()),
    endCallText: core.serialization.property("end_call_text", core.serialization.string().optional()),
    expandText: core.serialization.property("expand_text", core.serialization.string().optional()),
    listeningText: core.serialization.property("listening_text", core.serialization.string().optional()),
    speakingText: core.serialization.property("speaking_text", core.serialization.string().optional()),
    shareablePageText: core.serialization.property("shareable_page_text", core.serialization.string().optional()),
    shareablePageShowTerms: core.serialization.property("shareable_page_show_terms", core.serialization.boolean().optional()),
    termsText: core.serialization.property("terms_text", core.serialization.string().optional()),
    termsHtml: core.serialization.property("terms_html", core.serialization.string().optional()),
    termsKey: core.serialization.property("terms_key", core.serialization.string().optional()),
    showAvatarWhenCollapsed: core.serialization.property("show_avatar_when_collapsed", core.serialization.boolean().optional()),
    disableBanner: core.serialization.property("disable_banner", core.serialization.boolean().optional()),
    overrideLink: core.serialization.property("override_link", core.serialization.string().optional()),
    micMutingEnabled: core.serialization.property("mic_muting_enabled", core.serialization.boolean().optional()),
    transcriptEnabled: core.serialization.property("transcript_enabled", core.serialization.boolean().optional()),
    textInputEnabled: core.serialization.property("text_input_enabled", core.serialization.boolean().optional()),
    textContents: core.serialization.property("text_contents", WidgetTextContents_1.WidgetTextContents.optional()),
    language: core.serialization.string(),
    supportedLanguageOverrides: core.serialization.property("supported_language_overrides", core.serialization.list(core.serialization.string()).optional()),
    languagePresets: core.serialization.property("language_presets", core.serialization.record(core.serialization.string(), WidgetLanguagePresetResponse_1.WidgetLanguagePresetResponse).optional()),
    textOnly: core.serialization.property("text_only", core.serialization.boolean().optional()),
    supportsTextOnly: core.serialization.property("supports_text_only", core.serialization.boolean().optional()),
    firstMessage: core.serialization.property("first_message", core.serialization.string().optional()),
});
