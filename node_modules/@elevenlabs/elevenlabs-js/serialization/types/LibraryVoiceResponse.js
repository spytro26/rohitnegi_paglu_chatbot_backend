"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibraryVoiceResponse = void 0;
const core = __importStar(require("../../core"));
const LibraryVoiceResponseModelCategory_1 = require("./LibraryVoiceResponseModelCategory");
const VerifiedVoiceLanguageResponseModel_1 = require("./VerifiedVoiceLanguageResponseModel");
exports.LibraryVoiceResponse = core.serialization.object({
    publicOwnerId: core.serialization.property("public_owner_id", core.serialization.string()),
    voiceId: core.serialization.property("voice_id", core.serialization.string()),
    dateUnix: core.serialization.property("date_unix", core.serialization.number()),
    name: core.serialization.string(),
    accent: core.serialization.string(),
    gender: core.serialization.string(),
    age: core.serialization.string(),
    descriptive: core.serialization.string(),
    useCase: core.serialization.property("use_case", core.serialization.string()),
    category: LibraryVoiceResponseModelCategory_1.LibraryVoiceResponseModelCategory,
    language: core.serialization.string().optional(),
    locale: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    previewUrl: core.serialization.property("preview_url", core.serialization.string().optional()),
    usageCharacterCount1Y: core.serialization.property("usage_character_count_1y", core.serialization.number()),
    usageCharacterCount7D: core.serialization.property("usage_character_count_7d", core.serialization.number()),
    playApiUsageCharacterCount1Y: core.serialization.property("play_api_usage_character_count_1y", core.serialization.number()),
    clonedByCount: core.serialization.property("cloned_by_count", core.serialization.number()),
    rate: core.serialization.number().optional(),
    fiatRate: core.serialization.property("fiat_rate", core.serialization.number().optional()),
    freeUsersAllowed: core.serialization.property("free_users_allowed", core.serialization.boolean()),
    liveModerationEnabled: core.serialization.property("live_moderation_enabled", core.serialization.boolean()),
    featured: core.serialization.boolean(),
    verifiedLanguages: core.serialization.property("verified_languages", core.serialization.list(VerifiedVoiceLanguageResponseModel_1.VerifiedVoiceLanguageResponseModel).optional()),
    noticePeriod: core.serialization.property("notice_period", core.serialization.number().optional()),
    instagramUsername: core.serialization.property("instagram_username", core.serialization.string().optional()),
    twitterUsername: core.serialization.property("twitter_username", core.serialization.string().optional()),
    youtubeUsername: core.serialization.property("youtube_username", core.serialization.string().optional()),
    tiktokUsername: core.serialization.property("tiktok_username", core.serialization.string().optional()),
    imageUrl: core.serialization.property("image_url", core.serialization.string().optional()),
    isAddedByUser: core.serialization.property("is_added_by_user", core.serialization.boolean().optional()),
});
