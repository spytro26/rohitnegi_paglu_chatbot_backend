"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Model = void 0;
const core = __importStar(require("../../core"));
const LanguageResponse_1 = require("./LanguageResponse");
const ModelRatesResponseModel_1 = require("./ModelRatesResponseModel");
const ModelResponseModelConcurrencyGroup_1 = require("./ModelResponseModelConcurrencyGroup");
exports.Model = core.serialization.object({
    modelId: core.serialization.property("model_id", core.serialization.string()),
    name: core.serialization.string().optional(),
    canBeFinetuned: core.serialization.property("can_be_finetuned", core.serialization.boolean().optional()),
    canDoTextToSpeech: core.serialization.property("can_do_text_to_speech", core.serialization.boolean().optional()),
    canDoVoiceConversion: core.serialization.property("can_do_voice_conversion", core.serialization.boolean().optional()),
    canUseStyle: core.serialization.property("can_use_style", core.serialization.boolean().optional()),
    canUseSpeakerBoost: core.serialization.property("can_use_speaker_boost", core.serialization.boolean().optional()),
    servesProVoices: core.serialization.property("serves_pro_voices", core.serialization.boolean().optional()),
    tokenCostFactor: core.serialization.property("token_cost_factor", core.serialization.number().optional()),
    description: core.serialization.string().optional(),
    requiresAlphaAccess: core.serialization.property("requires_alpha_access", core.serialization.boolean().optional()),
    maxCharactersRequestFreeUser: core.serialization.property("max_characters_request_free_user", core.serialization.number().optional()),
    maxCharactersRequestSubscribedUser: core.serialization.property("max_characters_request_subscribed_user", core.serialization.number().optional()),
    maximumTextLengthPerRequest: core.serialization.property("maximum_text_length_per_request", core.serialization.number().optional()),
    languages: core.serialization.list(LanguageResponse_1.LanguageResponse).optional(),
    modelRates: core.serialization.property("model_rates", ModelRatesResponseModel_1.ModelRatesResponseModel.optional()),
    concurrencyGroup: core.serialization.property("concurrency_group", ModelResponseModelConcurrencyGroup_1.ModelResponseModelConcurrencyGroup.optional()),
});
