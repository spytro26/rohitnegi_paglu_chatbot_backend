"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.VoiceSharingResponse = void 0;
const core = __importStar(require("../../core"));
const VoiceSharingState_1 = require("./VoiceSharingState");
const VoiceSharingResponseModelCategory_1 = require("./VoiceSharingResponseModelCategory");
const ReviewStatus_1 = require("./ReviewStatus");
const VoiceSharingModerationCheckResponseModel_1 = require("./VoiceSharingModerationCheckResponseModel");
const ReaderResourceResponseModel_1 = require("./ReaderResourceResponseModel");
exports.VoiceSharingResponse = core.serialization.object({
    status: VoiceSharingState_1.VoiceSharingState.optional(),
    historyItemSampleId: core.serialization.property("history_item_sample_id", core.serialization.string().optional()),
    dateUnix: core.serialization.property("date_unix", core.serialization.number().optional()),
    whitelistedEmails: core.serialization.property("whitelisted_emails", core.serialization.list(core.serialization.string()).optional()),
    publicOwnerId: core.serialization.property("public_owner_id", core.serialization.string().optional()),
    originalVoiceId: core.serialization.property("original_voice_id", core.serialization.string().optional()),
    financialRewardsEnabled: core.serialization.property("financial_rewards_enabled", core.serialization.boolean().optional()),
    freeUsersAllowed: core.serialization.property("free_users_allowed", core.serialization.boolean().optional()),
    liveModerationEnabled: core.serialization.property("live_moderation_enabled", core.serialization.boolean().optional()),
    rate: core.serialization.number().optional(),
    fiatRate: core.serialization.property("fiat_rate", core.serialization.number().optional()),
    noticePeriod: core.serialization.property("notice_period", core.serialization.number().optional()),
    disableAtUnix: core.serialization.property("disable_at_unix", core.serialization.number().optional()),
    voiceMixingAllowed: core.serialization.property("voice_mixing_allowed", core.serialization.boolean().optional()),
    featured: core.serialization.boolean().optional(),
    category: VoiceSharingResponseModelCategory_1.VoiceSharingResponseModelCategory.optional(),
    readerAppEnabled: core.serialization.property("reader_app_enabled", core.serialization.boolean().optional()),
    imageUrl: core.serialization.property("image_url", core.serialization.string().optional()),
    banReason: core.serialization.property("ban_reason", core.serialization.string().optional()),
    likedByCount: core.serialization.property("liked_by_count", core.serialization.number().optional()),
    clonedByCount: core.serialization.property("cloned_by_count", core.serialization.number().optional()),
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    labels: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    reviewStatus: core.serialization.property("review_status", ReviewStatus_1.ReviewStatus.optional()),
    reviewMessage: core.serialization.property("review_message", core.serialization.string().optional()),
    enabledInLibrary: core.serialization.property("enabled_in_library", core.serialization.boolean().optional()),
    instagramUsername: core.serialization.property("instagram_username", core.serialization.string().optional()),
    twitterUsername: core.serialization.property("twitter_username", core.serialization.string().optional()),
    youtubeUsername: core.serialization.property("youtube_username", core.serialization.string().optional()),
    tiktokUsername: core.serialization.property("tiktok_username", core.serialization.string().optional()),
    moderationCheck: core.serialization.property("moderation_check", VoiceSharingModerationCheckResponseModel_1.VoiceSharingModerationCheckResponseModel.optional()),
    readerRestrictedOn: core.serialization.property("reader_restricted_on", core.serialization.list(ReaderResourceResponseModel_1.ReaderResourceResponseModel).optional()),
});
