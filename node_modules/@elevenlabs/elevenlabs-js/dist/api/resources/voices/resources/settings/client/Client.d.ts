/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as ElevenLabs from "../../../../../index";
export declare namespace Settings {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | environments.ElevenLabsEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Settings {
    protected readonly _options: Settings.Options;
    constructor(_options?: Settings.Options);
    /**
     * Gets the default settings for voices. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {Settings.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @example
     *     await client.voices.settings.getDefault()
     */
    getDefault(requestOptions?: Settings.RequestOptions): core.HttpResponsePromise<ElevenLabs.VoiceSettings>;
    private __getDefault;
    /**
     * Returns the settings for a specific voice. "similarity_boost" corresponds to"Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {string} voiceId - Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.
     * @param {Settings.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.settings.get("21m00Tcm4TlvDq8ikWAM")
     */
    get(voiceId: string, requestOptions?: Settings.RequestOptions): core.HttpResponsePromise<ElevenLabs.VoiceSettings>;
    private __get;
    /**
     * Edit your settings for a specific voice. "similarity_boost" corresponds to "Clarity + Similarity Enhancement" in the web app and "stability" corresponds to "Stability" slider in the web app.
     *
     * @param {string} voiceId - ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.
     * @param {ElevenLabs.VoiceSettings} request
     * @param {Settings.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.voices.settings.update("21m00Tcm4TlvDq8ikWAM", {
     *         stability: 1,
     *         useSpeakerBoost: true,
     *         similarityBoost: 1,
     *         style: 0,
     *         speed: 1
     *     })
     */
    update(voiceId: string, request: ElevenLabs.VoiceSettings, requestOptions?: Settings.RequestOptions): core.HttpResponsePromise<ElevenLabs.EditVoiceSettingsResponseModel>;
    private __update;
}
