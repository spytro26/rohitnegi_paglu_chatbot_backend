/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import * as ElevenLabs from "../../../../../index";
export declare namespace Rules {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | environments.ElevenLabsEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Rules {
    protected readonly _options: Rules.Options;
    constructor(_options?: Rules.Options);
    /**
     * Add rules to the pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {ElevenLabs.pronunciationDictionaries.PronunciationDictionary} request
     * @param {Rules.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.rules.add("21m00Tcm4TlvDq8ikWAM", {
     *         rules: [{
     *                 type: "alias",
     *                 stringToReplace: "Thailand",
     *                 alias: "tie-land"
     *             }]
     *     })
     */
    add(pronunciationDictionaryId: string, request: ElevenLabs.pronunciationDictionaries.PronunciationDictionary, requestOptions?: Rules.RequestOptions): core.HttpResponsePromise<ElevenLabs.PronunciationDictionaryRulesResponseModel>;
    private __add;
    /**
     * Remove rules from the pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {ElevenLabs.pronunciationDictionaries.RemovePronunciationDictionaryRulesRequest} request
     * @param {Rules.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.rules.remove("21m00Tcm4TlvDq8ikWAM", {
     *         ruleStrings: ["rule_strings"]
     *     })
     */
    remove(pronunciationDictionaryId: string, request: ElevenLabs.pronunciationDictionaries.RemovePronunciationDictionaryRulesRequest, requestOptions?: Rules.RequestOptions): core.HttpResponsePromise<ElevenLabs.PronunciationDictionaryRulesResponseModel>;
    private __remove;
}
