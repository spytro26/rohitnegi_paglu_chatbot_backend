/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as ElevenLabs from "../../../index";
import * as stream from "stream";
import { Rules } from "../resources/rules/client/Client";
export declare namespace PronunciationDictionaries {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | environments.ElevenLabsEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class PronunciationDictionaries {
    protected readonly _options: PronunciationDictionaries.Options;
    protected _rules: Rules | undefined;
    constructor(_options?: PronunciationDictionaries.Options);
    get rules(): Rules;
    /**
     * Creates a new pronunciation dictionary from a lexicon .PLS file
     *
     * @param {ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost} request
     * @param {PronunciationDictionaries.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.createFromFile({
     *         name: "name"
     *     })
     */
    createFromFile(request: ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost, requestOptions?: PronunciationDictionaries.RequestOptions): core.HttpResponsePromise<ElevenLabs.AddPronunciationDictionaryResponseModel>;
    private __createFromFile;
    /**
     * Creates a new pronunciation dictionary from provided rules.
     *
     * @param {ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPost} request
     * @param {PronunciationDictionaries.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.createFromRules({
     *         rules: [{
     *                 type: "alias",
     *                 stringToReplace: "Thailand",
     *                 alias: "tie-land"
     *             }],
     *         name: "My Dictionary"
     *     })
     */
    createFromRules(request: ElevenLabs.BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPost, requestOptions?: PronunciationDictionaries.RequestOptions): core.HttpResponsePromise<ElevenLabs.AddPronunciationDictionaryResponseModel>;
    private __createFromRules;
    /**
     * Get a PLS file with a pronunciation dictionary version rules
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     */
    download(dictionaryId: string, versionId: string, requestOptions?: PronunciationDictionaries.RequestOptions): core.HttpResponsePromise<stream.Readable>;
    private __download;
    /**
     * Get metadata for a pronunciation dictionary
     *
     * @param {string} pronunciationDictionaryId - The id of the pronunciation dictionary
     * @param {PronunciationDictionaries.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.get("21m00Tcm4TlvDq8ikWAM")
     */
    get(pronunciationDictionaryId: string, requestOptions?: PronunciationDictionaries.RequestOptions): core.HttpResponsePromise<ElevenLabs.GetPronunciationDictionaryMetadataResponse>;
    private __get;
    /**
     * Get a list of the pronunciation dictionaries you have access to and their metadata
     *
     * @param {ElevenLabs.PronunciationDictionariesListRequest} request
     * @param {PronunciationDictionaries.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.pronunciationDictionaries.list()
     */
    list(request?: ElevenLabs.PronunciationDictionariesListRequest, requestOptions?: PronunciationDictionaries.RequestOptions): core.HttpResponsePromise<ElevenLabs.GetPronunciationDictionariesMetadataResponseModel>;
    private __list;
}
