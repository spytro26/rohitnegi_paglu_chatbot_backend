"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversationHistoryTranscriptCommonModelOutput = void 0;
const core = __importStar(require("../../core"));
const ConversationHistoryTranscriptCommonModelOutputRole_1 = require("./ConversationHistoryTranscriptCommonModelOutputRole");
const ConversationHistoryTranscriptToolCallCommonModel_1 = require("./ConversationHistoryTranscriptToolCallCommonModel");
const ConversationHistoryTranscriptToolResultCommonModel_1 = require("./ConversationHistoryTranscriptToolResultCommonModel");
const UserFeedback_1 = require("./UserFeedback");
const ConversationTurnMetrics_1 = require("./ConversationTurnMetrics");
const RagRetrievalInfo_1 = require("./RagRetrievalInfo");
const LlmUsageOutput_1 = require("./LlmUsageOutput");
const ConversationHistoryTranscriptCommonModelOutputSourceMedium_1 = require("./ConversationHistoryTranscriptCommonModelOutputSourceMedium");
exports.ConversationHistoryTranscriptCommonModelOutput = core.serialization.object({
    role: ConversationHistoryTranscriptCommonModelOutputRole_1.ConversationHistoryTranscriptCommonModelOutputRole,
    message: core.serialization.string().optional(),
    toolCalls: core.serialization.property("tool_calls", core.serialization.list(ConversationHistoryTranscriptToolCallCommonModel_1.ConversationHistoryTranscriptToolCallCommonModel).optional()),
    toolResults: core.serialization.property("tool_results", core.serialization.list(ConversationHistoryTranscriptToolResultCommonModel_1.ConversationHistoryTranscriptToolResultCommonModel).optional()),
    feedback: UserFeedback_1.UserFeedback.optional(),
    llmOverride: core.serialization.property("llm_override", core.serialization.string().optional()),
    timeInCallSecs: core.serialization.property("time_in_call_secs", core.serialization.number()),
    conversationTurnMetrics: core.serialization.property("conversation_turn_metrics", ConversationTurnMetrics_1.ConversationTurnMetrics.optional()),
    ragRetrievalInfo: core.serialization.property("rag_retrieval_info", RagRetrievalInfo_1.RagRetrievalInfo.optional()),
    llmUsage: core.serialization.property("llm_usage", LlmUsageOutput_1.LlmUsageOutput.optional()),
    interrupted: core.serialization.boolean().optional(),
    originalMessage: core.serialization.property("original_message", core.serialization.string().optional()),
    sourceMedium: core.serialization.property("source_medium", ConversationHistoryTranscriptCommonModelOutputSourceMedium_1.ConversationHistoryTranscriptCommonModelOutputSourceMedium.optional()),
});
