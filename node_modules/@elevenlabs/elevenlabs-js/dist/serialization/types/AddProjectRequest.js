"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddProjectRequest = void 0;
const core = __importStar(require("../../core"));
const BodyAddProjectV1ProjectsAddPostTargetAudience_1 = require("./BodyAddProjectV1ProjectsAddPostTargetAudience");
const BodyAddProjectV1ProjectsAddPostFiction_1 = require("./BodyAddProjectV1ProjectsAddPostFiction");
const BodyAddProjectV1ProjectsAddPostApplyTextNormalization_1 = require("./BodyAddProjectV1ProjectsAddPostApplyTextNormalization");
const BodyAddProjectV1ProjectsAddPostSourceType_1 = require("./BodyAddProjectV1ProjectsAddPostSourceType");
exports.AddProjectRequest = core.serialization.object({
    name: core.serialization.string(),
    defaultTitleVoiceId: core.serialization.property("default_title_voice_id", core.serialization.string()),
    defaultParagraphVoiceId: core.serialization.property("default_paragraph_voice_id", core.serialization.string()),
    defaultModelId: core.serialization.property("default_model_id", core.serialization.string()),
    fromUrl: core.serialization.property("from_url", core.serialization.string().optional()),
    fromDocument: core.serialization.property("from_document", core.serialization.string().optional()),
    qualityPreset: core.serialization.property("quality_preset", core.serialization.string().optional()),
    title: core.serialization.string().optional(),
    author: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    genres: core.serialization.list(core.serialization.string()).optional(),
    targetAudience: core.serialization.property("target_audience", BodyAddProjectV1ProjectsAddPostTargetAudience_1.BodyAddProjectV1ProjectsAddPostTargetAudience.optional()),
    language: core.serialization.string().optional(),
    contentType: core.serialization.property("content_type", core.serialization.string().optional()),
    originalPublicationDate: core.serialization.property("original_publication_date", core.serialization.string().optional()),
    matureContent: core.serialization.property("mature_content", core.serialization.boolean().optional()),
    isbnNumber: core.serialization.property("isbn_number", core.serialization.string().optional()),
    acxVolumeNormalization: core.serialization.property("acx_volume_normalization", core.serialization.boolean().optional()),
    volumeNormalization: core.serialization.property("volume_normalization", core.serialization.boolean().optional()),
    pronunciationDictionaryLocators: core.serialization.property("pronunciation_dictionary_locators", core.serialization.list(core.serialization.string()).optional()),
    callbackUrl: core.serialization.property("callback_url", core.serialization.string().optional()),
    fiction: BodyAddProjectV1ProjectsAddPostFiction_1.BodyAddProjectV1ProjectsAddPostFiction.optional(),
    applyTextNormalization: core.serialization.property("apply_text_normalization", BodyAddProjectV1ProjectsAddPostApplyTextNormalization_1.BodyAddProjectV1ProjectsAddPostApplyTextNormalization.optional()),
    autoConvert: core.serialization.property("auto_convert", core.serialization.boolean().optional()),
    autoAssignVoices: core.serialization.property("auto_assign_voices", core.serialization.boolean().optional()),
    sourceType: core.serialization.property("source_type", BodyAddProjectV1ProjectsAddPostSourceType_1.BodyAddProjectV1ProjectsAddPostSourceType.optional()),
});
