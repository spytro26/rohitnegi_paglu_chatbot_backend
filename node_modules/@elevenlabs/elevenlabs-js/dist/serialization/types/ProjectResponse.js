"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectResponse = void 0;
const core = __importStar(require("../../core"));
const ProjectResponseModelTargetAudience_1 = require("./ProjectResponseModelTargetAudience");
const ProjectState_1 = require("./ProjectState");
const ProjectResponseModelAccessLevel_1 = require("./ProjectResponseModelAccessLevel");
const ProjectResponseModelFiction_1 = require("./ProjectResponseModelFiction");
const ProjectCreationMetaResponseModel_1 = require("./ProjectCreationMetaResponseModel");
const ProjectResponseModelSourceType_1 = require("./ProjectResponseModelSourceType");
exports.ProjectResponse = core.serialization.object({
    projectId: core.serialization.property("project_id", core.serialization.string()),
    name: core.serialization.string(),
    createDateUnix: core.serialization.property("create_date_unix", core.serialization.number()),
    defaultTitleVoiceId: core.serialization.property("default_title_voice_id", core.serialization.string()),
    defaultParagraphVoiceId: core.serialization.property("default_paragraph_voice_id", core.serialization.string()),
    defaultModelId: core.serialization.property("default_model_id", core.serialization.string()),
    lastConversionDateUnix: core.serialization.property("last_conversion_date_unix", core.serialization.number().optional()),
    canBeDownloaded: core.serialization.property("can_be_downloaded", core.serialization.boolean()),
    title: core.serialization.string().optional(),
    author: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    genres: core.serialization.list(core.serialization.string()).optional(),
    coverImageUrl: core.serialization.property("cover_image_url", core.serialization.string().optional()),
    targetAudience: core.serialization.property("target_audience", ProjectResponseModelTargetAudience_1.ProjectResponseModelTargetAudience.optional()),
    language: core.serialization.string().optional(),
    contentType: core.serialization.property("content_type", core.serialization.string().optional()),
    originalPublicationDate: core.serialization.property("original_publication_date", core.serialization.string().optional()),
    matureContent: core.serialization.property("mature_content", core.serialization.boolean().optional()),
    isbnNumber: core.serialization.property("isbn_number", core.serialization.string().optional()),
    volumeNormalization: core.serialization.property("volume_normalization", core.serialization.boolean()),
    state: ProjectState_1.ProjectState,
    accessLevel: core.serialization.property("access_level", ProjectResponseModelAccessLevel_1.ProjectResponseModelAccessLevel),
    fiction: ProjectResponseModelFiction_1.ProjectResponseModelFiction.optional(),
    qualityCheckOn: core.serialization.property("quality_check_on", core.serialization.boolean()),
    qualityCheckOnWhenBulkConvert: core.serialization.property("quality_check_on_when_bulk_convert", core.serialization.boolean()),
    creationMeta: core.serialization.property("creation_meta", ProjectCreationMetaResponseModel_1.ProjectCreationMetaResponseModel.optional()),
    sourceType: core.serialization.property("source_type", ProjectResponseModelSourceType_1.ProjectResponseModelSourceType.optional()),
    chaptersEnabled: core.serialization.property("chapters_enabled", core.serialization.boolean().optional()),
});
