imports:
  root: ../../__package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    create:
      path: /v1/studio/projects/{project_id}/pronunciation-dictionaries
      method: POST
      auth: false
      docs: >-
        Create a set of pronunciation dictionaries acting on a project. This
        will automatically mark text within this project as requiring
        reconverting where the new dictionary would apply or the old one no
        longer does.
      source:
        openapi: openapi.json
      path-parameters:
        project_id:
          type: string
          docs: >-
            The ID of the project to be used. You can use the [List
            projects](/docs/api-reference/studio/get-projects) endpoint to list
            all the available projects.
      display-name: Create Pronunciation Dictionaries
      request:
        name: >-
          BodyCreatePronunciationDictionariesV1StudioProjectsProjectIdPronunciationDictionariesPost
        body:
          properties:
            pronunciation_dictionary_locators:
              docs: >-
                A list of pronunciation dictionary locators
                (pronunciation_dictionary_id, version_id) encoded as a list of
                JSON strings for pronunciation dictionaries to be applied to the
                text. A list of json encoded strings is required as adding
                projects may occur through formData as opposed to jsonBody. To
                specify multiple dictionaries use multiple --form lines in your
                curl, such as --form
                'pronunciation_dictionary_locators="{\"pronunciation_dictionary_id\":\"Vmd4Zor6fplcA7WrINey\",\"version_id\":\"hRPaxjlTdR7wFMhV4w0b\"}"'
                --form
                'pronunciation_dictionary_locators="{\"pronunciation_dictionary_id\":\"JzWtcGQMJ6bnlWwyMo7e\",\"version_id\":\"lbmwxiLu4q6txYxgdZqn\"}"'.
                Note that multiple dictionaries are not currently supported by
                our UI which will only show the first.
              type: list<root.PronunciationDictionaryVersionLocator>
            invalidate_affected_text:
              type: optional<boolean>
              docs: >-
                This will automatically mark text in this project for
                reconversion when the new dictionary applies or the old one no
                longer does.
              default: true
        content-type: application/json
      response:
        docs: Successful Response
        type: root.CreatePronunciationDictionaryResponseModel
        status-code: 200
      errors:
        - root.UnprocessableEntityError
      examples:
        - path-parameters:
            project_id: 21m00Tcm4TlvDq8ikWAM
          request:
            pronunciation_dictionary_locators:
              - pronunciation_dictionary_id: pronunciation_dictionary_id
          response:
            body:
              status: ok
  source:
    openapi: openapi.json
