/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../../../../../environments";
import * as core from "../../../../../../../../../../core";
import * as ElevenLabs from "../../../../../../../../../index";
export declare namespace Segment {
    interface Options {
        environment?: core.Supplier<environments.ElevenLabsEnvironment | environments.ElevenLabsEnvironmentUrls>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Override the xi-api-key header */
        apiKey?: core.Supplier<string | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the xi-api-key header */
        apiKey?: string | undefined;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}
export declare class Segment {
    protected readonly _options: Segment.Options;
    constructor(_options?: Segment.Options);
    /**
     * Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.
     *
     * @param {string} dubbingId - ID of the dubbing project.
     * @param {string} speakerId - ID of the speaker.
     * @param {ElevenLabs.dubbing.resource.speaker.SegmentCreatePayload} request
     * @param {Segment.RequestOptions} requestOptions - Request-specific configuration.
     *
     * @throws {@link ElevenLabs.UnprocessableEntityError}
     *
     * @example
     *     await client.dubbing.resource.speaker.segment.create("dubbing_id", "speaker_id", {
     *         startTime: 1.1,
     *         endTime: 1.1
     *     })
     */
    create(dubbingId: string, speakerId: string, request: ElevenLabs.dubbing.resource.speaker.SegmentCreatePayload, requestOptions?: Segment.RequestOptions): core.HttpResponsePromise<ElevenLabs.SegmentCreateResponse>;
    private __create;
}
